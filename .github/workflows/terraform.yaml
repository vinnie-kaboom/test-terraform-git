name: 'Terraform'

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    
    permissions:
      contents: write
      pull-requests: write

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: 'Auth to GCP'
      uses: 'google-github-actions/auth@v1'
      with:
        credentials_json: '${{ secrets.GCP_SA_KEY }}'

    - name: 'Set up Cloud SDK'
      uses: 'google-github-actions/setup-gcloud@v1'

    - name: 'Setup Terraform'
      uses: hashicorp/setup-terraform@v1

    - name: 'Configure Git'
      run: |
        git config --global user.name 'GitHub Actions'
        git config --global user.email 'github-actions@github.com'

    - name: 'Terraform Init'
      run: |
        cd terraform-test
        terraform init
        # Show current directory and list files
        pwd
        ls -la

    - name: 'Terraform Plan'
      run: |
        cd terraform-test
        terraform plan

    - name: 'Terraform Apply'
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: |
        cd terraform-test
        terraform apply -auto-approve
        # Show state file location and content
        echo "State file location:"
        pwd
        ls -la terraform.tfstate*
        echo "State file content preview:"
        head -n 5 terraform.tfstate

    - name: 'Commit and Push State'
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: |
        cd terraform-test
        # Show what we're about to commit
        echo "Files to be committed:"
        git status --porcelain
        
        # Commit and push state files if they exist
        if [[ -f terraform.tfstate && -n $(git status --porcelain terraform.tfstate) ]]; then
          git add terraform.tfstate
          git commit -m "Update Terraform state [skip ci]"
          git push
        fi

        if [[ -f terraform.tfstate.backup && -n $(git status --porcelain terraform.tfstate.backup) ]]; then
          git add terraform.tfstate.backup
          git commit -m "Update Terraform state backup [skip ci]"
          git push
        fi

          