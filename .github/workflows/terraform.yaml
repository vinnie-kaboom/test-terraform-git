name: 'Terraform'

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: write
  pull-requests: write

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    env:
      GOOGLE_CREDENTIALS: ${{ secrets.GCP_SA_KEY }}

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: 'Setup Terraform'
      uses: hashicorp/setup-terraform@v1

    - name: 'Configure Git'
      run: |
        git config --global user.name 'GitHub Actions'
        git config --global user.email 'github-actions@github.com'

    - name: 'Terraform Init'
      run: |
        cd terraform-test
        terraform init
        pwd
        ls -la

    - name: 'Terraform Plan'
      run: |
        cd terraform-test
        terraform plan

    - name: 'Terraform Apply'
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: |
        cd terraform-test
        terraform apply -auto-approve

    - name: 'Commit and Push State'
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: |
        cd terraform-test
        if [[ -f terraform.tfstate && -n $(git status --porcelain terraform.tfstate) ]]; then
          git add terraform.tfstate
          git commit -m "Update Terraform state [skip ci]"
          git push
        fi

        if [[ -f terraform.tfstate.backup && -n $(git status --porcelain terraform.tfstate.backup) ]]; then
          git add terraform.tfstate.backup
          git commit -m "Update Terraform state backup [skip ci]"
          git push
        fi
          