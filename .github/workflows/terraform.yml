name: 'Terraform'

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  
permissions:
  contents: read
  id-token: write

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    # Initial auth with minimal secrets
    - name: 'Initial Auth to GCP'
      uses: 'google-github-actions/auth@v1'
      with:
        workload_identity_provider: '${{ secrets.INITIAL_WORKLOAD_IDENTITY_PROVIDER }}'
        service_account: '${{ secrets.INITIAL_SERVICE_ACCOUNT }}'

    - name: 'Set up Cloud SDK'
      uses: 'google-github-actions/setup-gcloud@v1'

    # Fetch secrets from Secret Manager
    - name: 'Fetch GCP Secrets'
      id: secrets
      run: |
        echo "::add-mask::$(gcloud secrets versions access latest --secret=github_workload_identity_provider)"
        echo "WORKLOAD_IDENTITY_PROVIDER=$(gcloud secrets versions access latest --secret=github_workload_identity_provider)" >> $GITHUB_ENV
        echo "::add-mask::$(gcloud secrets versions access latest --secret=github_service_account)"
        echo "SERVICE_ACCOUNT=$(gcloud secrets versions access latest --secret=github_service_account)" >> $GITHUB_ENV
        echo "::add-mask::$(gcloud secrets versions access latest --secret=project_id)"
        echo "PROJECT_ID=$(gcloud secrets versions access latest --secret=project_id)" >> $GITHUB_ENV

    # Re-authenticate with fetched credentials
    - name: 'Re-Auth to GCP with Secret Manager values'
      uses: 'google-github-actions/auth@v1'
      with:
        workload_identity_provider: '${{ env.WORKLOAD_IDENTITY_PROVIDER }}'
        service_account: '${{ env.SERVICE_ACCOUNT }}'

    - name: 'Test Secret Manager Access'
      run: |
        echo "Testing Secret Manager Access..."
        gcloud secrets list --project=${{ env.PROJECT_ID }}

    - name: 'Setup Terraform'
      uses: hashicorp/setup-terraform@v2

    - name: 'Terraform Init'
      run: terraform init

    - name: 'Terraform Format'
      run: terraform fmt -check

    - name: 'Terraform Plan'
      run: terraform plan

    # Uncomment if you want to allow terraform apply on main branch
    # - name: 'Terraform Apply'
    #   if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    #   run: terraform apply -auto-approve
